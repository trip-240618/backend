spring:
  application:
    name: trip
  profiles:
    active: local
    group:
      local: local, secret_dev, common
      blue: blue, secret_prod, common
      green: green, secret_prod, common

server:
  env: blue



---

spring:
  config:
    activate:
      on-profile: local

server:
  port: 8080
  serverAddress: localhost:8080


serverName: local_server




---
#blue서버 실제 운영서버
spring:
  config:
    activate:
      on-profile: blue

server:
  port: 8080
  serverAddress: trip-story.site #탄력적 ip >> 소셜로그인 설정을 blue green 각각 넣어줘야함


serverName: blue_server



---
#green서버 blue 서버 버전업 중에 무중단을 위해 대신 가동될 서버
spring:
  config:
    activate:
      on-profile: green

server:
  port: 8081
  serverAddress: trip-story.site


serverName: green_server
---
#blue, green 공통으로 사용하는 설정값
spring:
  config:
    activate:
      on-profile: common
  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-name: Kakao
            authorization-grant-type: authorization_code
            #TODO 나중에 모바일앱 redirect-uri로 바꿔야함 (카카오에서 사용자에게 카카오로그인을 요청할 uri)
            redirect-uri: 'https://${server.serverAddress}/user/oauth2/callback/kakao'
            client-authentication-method: POST
            scope:
              - profile_nickname
              - profile_image

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
